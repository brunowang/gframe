package dao

import (
	"context"
	"fmt"
	"github.com/go-sql-driver/mysql"
	"github.com/jmoiron/sqlx"
	"time"
)

type {{.Name}} struct {
    {{- range .Fields}}
    {{.Name}} {{.Type}} `db:"{{.ColName}}"` // {{.Comment}}
    {{- end}}
}

type {{.Name}}Dao struct {
    db *sqlx.DB
}

func New{{.Name}}Dao(db *sqlx.DB) *{{.Name}}Dao {
    return &{{.Name}}Dao{db: db}
}

func (d *{{.Name}}Dao) Insert{{.Name}}(ctx context.Context, m {{.Name}}) (int64, error) {
    cols := "{{range $i, $v := .Fields}}{{if not (eq 0 $i)}}, {{end}}{{.ColName}}{{end}}"
    sql := fmt.Sprintf("insert into {{.TabName}}(%s) values({{range $i, $v := .Fields}}{{if not (eq 0 $i)}}, {{end}}?{{end}})", cols)
    args := []interface{}{ {{range $i, $v := .Fields}}{{if not (eq 0 $i)}}, {{end}}m.{{.Name}}{{end}} }
    res, err := d.db.ExecContext(ctx, sql, args...)
    if err != nil {
        if e, ok := err.(*mysql.MySQLError); ok && e.Number == 1062 {
            return 0, fmt.Errorf("DuplicateKey")
        }
        return 0, err
    }
    return res.LastInsertId()
}
