var jspb = jsonpb.Marshaler{OrigName: true, EmitDefaults: true}
{{$proj := .ProjName}}
{{range .Messages}}
{{$msgName := .Name}}
type {{.Name}} struct {
    {{$proj}}.{{.Name}} `json:",inline"`
{{if .IsRsp}}
    Err error `json:"err"`
{{end}}
}

{{if .IsReq}}
func (m *{{.Name}}) IsValid() bool {
{{range .Fields}}
    {{if not .CheckLen}}
    if m.Get{{.Name}}() == {{.DefaultVal}} {
        return false
    }
    {{else}}
    if len(m.Get{{.Name}}()) == 0 {
        return false
    }
    {{end}}
{{end}}
    return true
}
{{end}}

{{if .IsReq}}
func (m *{{.Name}}) Fill(pb *{{$proj}}.{{.Name}}) {
    if pb == nil {
        return
    }
    m.{{.Name}} = *pb
    return
}
{{end}}

{{if .IsRsp}}
func (m *{{.Name}}) ToPb() *{{$proj}}.{{.Name}} {
    return &m.{{.Name}}
}
{{end}}

{{if .IsRsp}}
func (m *{{.Name}}) ToJson() []byte {
    js, _ := jspb.MarshalToString(m)
    return []byte(js)
}
{{end}}
{{end}}
